services:
  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - web-network
  backend:
    build:
      context: .
      dockerfile: backend/backend.Dockerfile
    ports:
      - "8080:8080"
    networks:
      - web-network
  mongodb:
    image: "mongo:latest"
    environment:
      - "MONGO_INITDB_DATABASE=mydatabase"
      - "MONGO_INITDB_ROOT_PASSWORD=secret"
      - "MONGO_INITDB_ROOT_USERNAME=root"
    ports:
      - "27017:27017"

    volumes:
      - type: volume
        source: medipath_data
        target: /data/db

    networks:
      - web-network

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - web-network
networks:
  web-network:
    driver: bridge

volumes:
  medipath_data:
